include: package:flutter_lints/flutter.yaml

analyzer:
  plugins:
    - dart_code_metrics
  exclude:
    - lib/localization/l10n/generated/*
    - lib/**.g.dart

dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20
    number-of-parameters: 4
    maximum-nesting-level: 5
  metrics-exclude:
    - test/**
  rules:
    - avoid-redundant-async
    - avoid-passing-async-when-sync-expected
    - avoid-redundant-async
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unused-parameters
    - no-boolean-literal-compare
    - prefer-trailing-comma
    - no-equal-then-else
    - avoid-passing-async-when-sync-expected: false

linter:
  rules:
    # Error rules
    always_use_package_imports: true # Avoid relative imports for files in lib/.
    avoid_dynamic_calls: true # Avoid method calls or property accesses on a dynamic target.
    avoid_empty_else: true # Avoid empty statements in else clauses.
    avoid_print: true # Avoid print calls in production code.
    avoid_relative_lib_imports: true # Avoid relative imports for files in lib/.
    avoid_slow_async_io: true # Avoid slow asynchronous dart:io methods.
    avoid_types_as_parameter_names: true # Avoid types as parameter names.
    unnecessary_statements: true # Avoid using unnecessary statements.
    no_duplicate_case_values: true # Don't use more than one case with same value.
    no_wildcard_variable_uses: true # Don't use wildcard parameters or variables.
    unrelated_type_equality_checks: true # Equality operator == invocation with references of unrelated types.
    collection_methods_unrelated_type: true # Invocation of various collection methods with arguments of unrelated types.
    cancel_subscriptions: true # Cancel instances of dart:async StreamSubscription.
    hash_and_equals: true # Always override hashCode if overriding ==.
    prefer_void_to_null: true # Don't use the Null type, unless you are positive that you don't want void.
    test_types_in_equals: true # Test type of argument in operator ==(Object other).
    use_key_in_widget_constructors: true # Use key in widget constructors.
    valid_regexps: true # Use valid regular expression syntax.

    # Style rules
    prefer_single_quotes: true # Uncomment to enable the `prefer_single_quotes` rule.
    avoid_shadowing_type_parameters: true # Avoid shadowing type parameters.
    await_only_futures: true # Await only futures.
    camel_case_extensions: true # Name extensions using UpperCamelCase.
    camel_case_types: true # Name types using UpperCamelCase.
    curly_braces_in_flow_control_structures: true # DO use curly braces for all flow control structures.
    dangling_library_doc_comments: true # Attach library doc comments to library directives.
    avoid_unnecessary_containers: true # Avoid unnecessary containers.
    avoid_unused_constructor_parameters: true # Avoid defining unused parameters in constructors.
    avoid_void_async: true # Avoid async functions that return void.
    empty_catches: true # Avoid empty catch blocks.
    file_names: true # Name source files using lowercase_with_underscores.
    always_declare_return_types: true # Declare method return types.
    prefer_final_locals: true # Prefer final for variable declarations if they are not reassigned.
    prefer_is_empty: true # Use isEmpty for Iterables and Maps.
    prefer_is_not_empty: true # Use isNotEmpty for Iterables and Maps.
    prefer_iterable_whereType: true # Prefer to use whereType on iterable.
    prefer_null_aware_method_calls: true # Prefer null-aware method calls.
    sized_box_for_whitespace: true # SizedBox for whitespace.
    unnecessary_await_in_return: true # Unnecessary await keyword in return.
    unnecessary_overrides: true # Don't override a method to do a super method invocation with the same parameters.
    unnecessary_parenthesis: true # Unnecessary parentheses can be removed.
    require_trailing_commas: true # Use trailing commas for all parameter lists and argument lists.
    unnecessary_lambdas: true # Don't create a lambda when a tear-off will do.
    use_decorated_box: true # Use DecoratedBox.
    library_private_types_in_public_api: false # Avoid using private types in public APIs.
    prefer_const_constructors: true # Prefer const with constant constructors.

